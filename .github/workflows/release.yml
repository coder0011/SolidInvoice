name: "Release"

concurrency:
  cancel-in-progress: true
  group: ${{ github.workflow }}-${{ github.ref }}

on:
  push:
    tags:
      - "*"
  workflow_dispatch:
    inputs:
      #checkov:skip=CKV_GHA_7
      version:
        description: "SolidInvoice version"
        required: false
        type: string

env:
  SOLIDINVOICE_ENV: prod
  SOLIDINVOICE_DEBUG: 0

permissions:  # added using https://github.com/step-security/secure-workflows
  contents: read

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      ref: ${{ steps.check.outputs.ref }}
    steps:
      - name: Get version
        id: check
        run: |
          ref="${{ (github.ref_type == 'tag' && github.ref_name) || (github.event_name == 'workflow_dispatch' && inputs.version) || '' }}"
          if [[ -z "${ref}" ]]; then
            ref="$(gh release view --repo pierredup/solidinvoice --json tagName --jq '.tagName')"
          fi
          echo "ref=${ref}" >> "${GITHUB_OUTPUT}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-dist:
    permissions:
      contents: write  # for actions/create-release to create a release
    name: Build Assets
    needs: [prepare]
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@4d991eb9b905ef189e4c376166672c3f2f230481
        with:
          egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs

      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683

      - name: Install PHP
        uses: shivammathur/setup-php@9e72090525849c5e82e596468b86eb55e9cc5401
        with:
          coverage: none
          ini-values: memory_limit=-1
          php-version: 8.3

      - uses: oven-sh/setup-bun@4bc047ad259df6fc24a6c9b0f9a0cb08cf17fbe5 # v2

      - name: Build Release Artifact
        run: "./scripts/build_dist.sh ${{ needs.prepare.outputs.ref }} ${{ needs.prepare.outputs.ref }}"
        env:
          RELEASE: 1
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-without-markdown
          path: |
            build/dist/SolidInvoice-*


#  build-mac:
#    name: Build ${{ matrix.os }}-${{ matrix.platform }} binaries
#    needs: [prepare]
#    permissions:
#      contents: write
#    strategy:
#      fail-fast: false
#      matrix:
#        include:
#          - platform: arm64
#            os: macos-14
#          - platform: x86_64
#            os: macos-13
#    runs-on: ${{ matrix.os }}
#    env:
#      HOMEBREW_NO_AUTO_UPDATE: 1
#      SOLIDINVOICE_VERSION: ${{ needs.prepare.outputs.ref }}
#      PHP_VERSION: 8.3
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
#
#      - name: Install PHP
#        uses: shivammathur/setup-php@9e72090525849c5e82e596468b86eb55e9cc5401
#        with:
#          coverage: none
#          ini-values: memory_limit=-1
#          php-version: 8.4 # static-php-cli requires PHP 8.4, but the app must be built with PHP 8.3
#
#      - uses: oven-sh/setup-bun@4bc047ad259df6fc24a6c9b0f9a0cb08cf17fbe5 # v2
#
#      - name: Build Release Artifact
#        run: "./scripts/build_dist.sh ${{ needs.prepare.outputs.ref }} ${{ needs.prepare.outputs.ref }}"
#        env:
#          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          RELEASE:
#
#      - uses: actions/setup-go@v5
#        with:
#          go-version: "1.24"
#          cache-dependency-path: frankenphp/go.sum
#
#      - name: Build SolidInvoice
#        run: ./scripts/build_binary.sh ${{ needs.prepare.outputs.ref }}
#        env:
#          # GITHUB_TOKEN needs to be defined twice here.
#          # GH_TOKEN is used by the gh cli utility to upload the binary files
#          # GITHUB_TOKEN is used by static-php-cli script to make api calls to Github
#          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#          RELEASE: 1

  build-linux:
    name: Build ${{ matrix.os }}-${{ matrix.platform }} binaries
    needs: [prepare, build-dist]
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        #platform: ["arm64", "x86_64"]
        include:
          - platform: linux/arm64
            os: ubuntu-24.04-arm
#          - platform: linux/amd64
#            os: ubuntu-24.04
#          #- platform: aarch64
#          #  os: ubuntu-24.04
#    #runs-on: ${{ matrix.platform == 'arm64' && 'macos-14' || 'macos-13' }}
    runs-on: ${{ matrix.os }}
#    container:
#      image: dunglas/frankenphp:static-builder-musl
#      options: --cpus 1
    env:
      HOMEBREW_NO_AUTO_UPDATE: 1
      SOLIDINVOICE_VERSION: ${{ needs.prepare.outputs.ref }}
      PHP_VERSION: 8.3
    steps:
      -  name: Prepare
         id: prepare
         run: |
           platform=${{ matrix.platform }}
           echo "sanitized_platform=${platform//\//-}" >> "${GITHUB_OUTPUT}"
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683

      # Add support for more platforms with QEMU
      # https://github.com/docker/setup-qemu-action
      #- name: Set up QEMU
      #  uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
            platforms: ${{ matrix.platform }}

      - name: Download a single artifact
        uses: actions/download-artifact@v4
        with:
          name: SolidInvoice-${{ needs.prepare.outputs.ref || github.ref }}.tar.gz
          path: build/dist

      - name: Build SolidInvoice
        #run: ./scripts/build_binary.sh ${{ needs.prepare.outputs.ref }}
        uses: docker/bake-action@v6
        with:
            targets: ${{ steps.prepare.outputs.sanitized_platform }}_binary
            source: .
            set: |
                ${{ steps.prepare.outputs.sanitized_platform }}_binary.args.NO_COMPRESS=${{ (matrix.platform == 'linux/arm64') && '1' || '0' }}
                *.tags=
                *.platform=${{ matrix.platform }}
                *.cache-from=type=gha,scope=${{ needs.prepare.outputs.ref || github.ref }}-${{ steps.prepare.outputs.sanitized_platform }}_binary
                *.cache-from=type=gha,scope=refs/heads/main-${{ steps.prepare.outputs.sanitized_platform }}_binary
                *.cache-to=type=gha,scope=${{ needs.prepare.outputs.ref || github.ref }}-${{ steps.prepare.outputs.sanitized_platform }}_binary,ignore-error=true
        env:
          # GITHUB_TOKEN needs to be defined twice here.
          # GH_TOKEN is used by the gh cli utility to upload the binary files
          # GITHUB_TOKEN is used by static-php-cli script to make api calls to Github
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RELEASE: 1
          SOLIDINVOICE_VERSION: ${{ needs.prepare.outputs.ref }}
