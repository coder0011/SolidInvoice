name: "Release"

concurrency:
  cancel-in-progress: true
  group: ${{ github.workflow }}-${{ github.ref }}

on:
  push:
    tags:
      - "*"
  workflow_dispatch:
    inputs:
      #checkov:skip=CKV_GHA_7
      version:
        description: "SolidInvoice version"
        required: false
        type: string

env:
  SOLIDINVOICE_ENV: prod
  SOLIDINVOICE_DEBUG: 0

permissions:  # added using https://github.com/step-security/secure-workflows
  contents: read

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      ref: ${{ steps.check.outputs.ref }}
    steps:
      - name: Get version
        id: check
        run: |
          ref="${{ (github.ref_type == 'tag' && github.ref_name) || (github.event_name == 'workflow_dispatch' && inputs.version) || '' }}"
          if [[ -z "${ref}" ]]; then
            ref="$(gh release view --repo pierredup/solidinvoice --json tagName --jq '.tagName')"
          fi

          echo "ref=${ref}" >> "${GITHUB_OUTPUT}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-dist:
    permissions:
      contents: write  # for actions/create-release to create a release
    name: Build Assets
    needs: [prepare]
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@4d991eb9b905ef189e4c376166672c3f2f230481
        with:
          egress-policy: audit # TODO: change to 'egress-policy: block' after couple of runs

      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683

      - name: Install PHP
        uses: shivammathur/setup-php@9e72090525849c5e82e596468b86eb55e9cc5401
        with:
          coverage: none
          extensions: curl, gd, intl, opcache, json, openssl, pdo, soap, xsl, :xdebug
          ini-values: memory_limit=-1
          php-version: 8.3

      - uses: oven-sh/setup-bun@4bc047ad259df6fc24a6c9b0f9a0cb08cf17fbe5 # v2

      - name: Build Release Artifact
        run: "./scripts/build_dist.sh ${{ needs.prepare.outputs.ref }} ${{ needs.prepare.outputs.ref }}"
        env:
          RELEASE: 1
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-mac:
    name: Build ${{ matrix.os }}-${{ matrix.platform }} binaries
    needs: [prepare]
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        #platform: ["arm64", "x86_64"]
        include:
          - platform: arm64
            os: macos-14
          - platform: x86_64
            os: macos-13
          - platform: arm64
            os: ubuntu-24.04-arm
          - platform: x86_64
            os: ubuntu-24.04
          #- platform: aarch64
          #  os: ubuntu-24.04
    #runs-on: ${{ matrix.platform == 'arm64' && 'macos-14' || 'macos-13' }}
    runs-on: ${{ matrix.os }}
    env:
      HOMEBREW_NO_AUTO_UPDATE: 1
      SOLIDINVOICE_VERSION: ${{ needs.prepare.outputs.ref }}
      PHP_VERSION: 8.4
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
        with:
          ref: ${{ needs.prepare.outputs.ref }}

      - name: Install PHP
        uses: shivammathur/setup-php@9e72090525849c5e82e596468b86eb55e9cc5401
        with:
          coverage: none
          extensions: curl, gd, intl, opcache, json, openssl, pdo, soap, xsl, :xdebug
          ini-values: memory_limit=-1
          php-version: ${{ env.PHP_VERSION }}

      - uses: oven-sh/setup-bun@4bc047ad259df6fc24a6c9b0f9a0cb08cf17fbe5 # v2

      - name: Build Release Artifact
        run: "./scripts/build_dist.sh ${{ needs.prepare.outputs.ref }} ${{ needs.prepare.outputs.ref }}"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RELEASE:

      - uses: actions/setup-go@v5
        with:
          go-version: "1.24"
          cache-dependency-path: frankenphp/go.sum

      - name: Copy app to build dir
        working-directory: ./frankenphp
        run: |
            cp "../build/dist/SolidInvoice-"$SOLIDINVOICE_VERSION".tar.gz" ./app.tar.gz
            gunzip -f app.tar.gz

      - name: Set env variables for Linux
        if: ${{ matrix.os == 'ubuntu-24.04' }} || ${{ matrix.os == 'ubuntu-24.04-arm' }}
        run: |
            echo "SPC_DEFAULT_C_FLAGS=-fPIE -fPIC -O3 -march=native" >> $GITHUB_ENV
            echo "SPC_LIBC=musl" >> $GITHUB_ENV
            echo "SPC_CMD_VAR_PHP_MAKE_EXTRA_LDFLAGS_PROGRAM=-Wl,-O3 -pie" >> $GITHUB_ENV

      - name: Build SolidInvoice
        run: ./build-static.sh
        working-directory: ./frankenphp
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RELEASE: 1
